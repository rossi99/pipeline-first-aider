name: CI

on:
  push:
    branches: [main, feat/comments]
  pull_request:
    branches: [main, feat/comments]
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      # forms artefact from build that 'first aider' can download and use 
      - name: Run tests & capture logs
        run: |
          go test ./... 2>&1 | tee build.log

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs     # arbitrary label
          path: build.log      # <-- this is mandatory

  first-aider:
    needs: build
    runs-on: ubuntu-latest
    env:
      CLAUDE_KEY: ${{ secrets.CLAUDE_KEY }}
    if: always()
    defaults:
      run:
        working-directory: ./cmd
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build logs
        uses: actions/download-artifact@v4
        with:
          name: build-logs
          path: logs

      - name: Run First-Aider
        id: first_aider
        uses: ./
        with:
          log-path: logs/build.log
  
      - name: Post suggestion comment
        uses: KeisukeYamashita/create-comment@v1
        with:
          number:  1
          comment: "Comment test"

        # if: steps.first_aider.outputs.comment
        # with:
        #   github-token: ${{ secrets.GITHUB_TOKEN }}
        #   script: |
        #     const body = process.env.COMMENT;
        #     github.issues.createComment({
        #       issue_number: context.payload.pull_request.number,
        #       owner: context.repo.owner,
        #       repo: context.repo.repo,
        #       body,
        #     });
        # env:
        #   COMMENT: ${{ steps.first_aider.outputs.comment }}